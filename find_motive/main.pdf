%PDF-1.4
%“Œ‹ž ReportLab Generated PDF document http://www.reportlab.com
1 0 obj
<<
/F1 2 0 R /F2 3 0 R /F3 4 0 R /F4 5 0 R
>>
endobj
2 0 obj
<<
/BaseFont /Helvetica /Encoding /WinAnsiEncoding /Name /F1 /Subtype /Type1 /Type /Font
>>
endobj
3 0 obj
<<
/BaseFont /Times-Roman /Encoding /WinAnsiEncoding /Name /F2 /Subtype /Type1 /Type /Font
>>
endobj
4 0 obj
<<
/BaseFont /Courier /Encoding /WinAnsiEncoding /Name /F3 /Subtype /Type1 /Type /Font
>>
endobj
5 0 obj
<<
/BaseFont /Helvetica-Oblique /Encoding /WinAnsiEncoding /Name /F4 /Subtype /Type1 /Type /Font
>>
endobj
6 0 obj
<<
/Contents 13 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 12 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
7 0 obj
<<
/Outlines 9 0 R /PageLabels 14 0 R /PageMode /UseNone /Pages 12 0 R /Type /Catalog
>>
endobj
8 0 obj
<<
/Author () /CreationDate (D:20220920225559+00'00') /Creator (\(unspecified\)) /Keywords () /ModDate (D:20220920225559+00'00') /Producer (ReportLab PDF Library - www.reportlab.com) 
  /Subject (\(unspecified\)) /Title (Find Motive) /Trapped /False
>>
endobj
9 0 obj
<<
/Count 3 /First 10 0 R /Last 10 0 R /Type /Outlines
>>
endobj
10 0 obj
<<
/Count 1 /Dest [ 6 0 R /XYZ 57.02362 404.375 0 ] /First 11 0 R /Last 11 0 R /Parent 9 0 R /Title (Challenge)
>>
endobj
11 0 obj
<<
/Dest [ 6 0 R /XYZ 57.02362 353.375 0 ] /Parent 10 0 R /Title (Bonus)
>>
endobj
12 0 obj
<<
/Count 1 /Kids [ 6 0 R ] /Type /Pages
>>
endobj
13 0 obj
<<
/Length 3512
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 57.02362 741.0236 cm
q
.133333 .133333 .133333 rg
BT 1 0 0 1 0 4 Tm /F2 20 Tf 24 TL 190.8842 0 Td (Find Motive) Tj T* -190.8842 0 Td ET
Q
Q
q
1 0 0 1 57.02362 681.0236 cm
q
BT 1 0 0 1 0 14 Tm 1.026112 Tw 12 TL /F1 10 Tf 0 0 0 rg (The goal of this exercise is to create a program which takes the path of a textfile as input and counts the) Tj T* 0 Tw (number of words containing a given motive \(the second argument\) at least once.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 639.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL 1.664488 Tw (The following restrictions/assumptions apply: - The motive is case-sensitive - Words containing a motive) Tj T* 0 Tw .656112 Tw (more than once are only counted once - The input files can contain any number of lines or be empty - The) Tj T* 0 Tw (input file may not exist - The executable is always called with two arguments) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 621.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The output generated for each input must have the following form with return code 0:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 579.575 cm
q
q
.899156 0 0 .899156 0 0 cm
q
1 0 0 1 6.6 7.340216 cm
q
.662745 .662745 .662745 RG
.5 w
.941176 .972549 1 rg
n -6 -6 534 36 re B*
Q
q
.533333 .533333 .533333 rg
BT 1 0 0 1 0 14 Tm /F3 10 Tf 12 TL (The file *input-file-path* contains *number* words containing the motive *input-motive*) Tj T*  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 57.02362 559.575 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Except if the file can not be opened, in this case the output must have the form) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 514.375 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.941176 .972549 1 rg
n -6 -6 480.0283 36 re B*
Q
q
.533333 .533333 .533333 rg
BT 1 0 0 1 0 14 Tm /F3 10 Tf 12 TL (The file *input-file-path* could not be opened.) Tj T*  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 57.02362 494.375 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (with return code 1) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 476.375 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (So for a file containing) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 470.375 cm
Q
q
1 0 0 1 57.02362 458.375 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The goal of this exercise is to create a program which takes the path of a textfile) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 446.375 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (as input and counts the number of words containing a given motive \(the second argument\)) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 434.375 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (at least once.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 434.375 cm
Q
q
1 0 0 1 57.02362 416.375 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (And the motive being ) Tj /F4 10 Tf (in) Tj /F1 10 Tf ( the printed count is 2.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 383.375 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F2 17.5 Tf .133333 .133333 .133333 rg (Challenge) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 365.375 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Implementations faster than our \(suboptimal but not bad\) reference implementation get extra points.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 335.375 cm
q
BT 1 0 0 1 0 3 Tm 18 TL /F2 15 Tf .133333 .133333 .133333 rg (Bonus) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 305.375 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .139913 Tw (Another bonus is given to an implementation if it is at least 10% faster than any of the other implementations) Tj T* 0 Tw (\(including our reference implem\)) Tj T* ET
Q
Q
 
endstream
endobj
14 0 obj
<<
/Nums [ 0 15 0 R ]
>>
endobj
15 0 obj
<<
/S /D /St 1
>>
endobj
xref
0 16
0000000000 65535 f 
0000000073 00000 n 
0000000134 00000 n 
0000000241 00000 n 
0000000350 00000 n 
0000000455 00000 n 
0000000570 00000 n 
0000000775 00000 n 
0000000879 00000 n 
0000001147 00000 n 
0000001220 00000 n 
0000001351 00000 n 
0000001443 00000 n 
0000001503 00000 n 
0000005067 00000 n 
0000005108 00000 n 
trailer
<<
/ID 
[<1066deec4e1f0e9044fa7cc5cad4bfde><1066deec4e1f0e9044fa7cc5cad4bfde>]
% ReportLab generated PDF document -- digest (http://www.reportlab.com)

/Info 8 0 R
/Root 7 0 R
/Size 16
>>
startxref
5142
%%EOF
